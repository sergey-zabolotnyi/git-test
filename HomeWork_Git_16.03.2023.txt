1. Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
Можем использовать команду "git checkout" с определенным именем файла (или именами файлов), чтобы отменить изменения,
сделанные в work directory. Будем как пример использовать название файла "text.txt":

    git checkout text.txt
    git checkout text1.txt, text2.txt, text3.txt
    git checkout . // все файлы, если много;

2. Как вернуть файл из индекса в рабочий каталог?
Чтобы вернуть файл из индекса в work directory, мы можем использовать команду "git reset".

    git reset text.txt

3. Как отменить ошибочный commit ?

    git reset HEAD~1
    git reset HEAD^ / отменит последний commit

    git reset HEAD~3
    git reset HEAD^^^ / отменит 3 последних commit

4. Как создать новую ветку и переключится в нее?
Будем как пример использовать название ветки "test":
    git branch test / создать ветку test
    git checkout test / перейти в ветку test

    git checkout -b test / создаст и перейдет в ветку test

5. В чем отличение между fast-forward merge  and non fast-forfard merge?
Fast-forward merge: Если ветка, которую нужно объединить, является прямым продолжением текущей ветки,
но изменения не пересекаются с изменениями в основной ветке.
Non fast-forward merge: когда изменения, внесенные в текущую ветку, пересекаются с изменениями в объединяемой ветке.

Fast-forward merge является более простым и быстрым способом объединения веток, но возможен только в ограниченном
числе случаев, когда изменения в объединяемой ветке не пересекаются с изменениями в текущей ветке.
В случае, если изменения пересекаются, необходимо использовать non fast-forward merge.

6. Когда может возникнуть конфликт слияния веток, как  его разрешить?
Конфликт слияния веток возникает, когда две ветки, которые вы пытаетесь объединить, содержат изменения в одних
и тех же строках кода. Это может произойти, если два разных разработчика внесли изменения в один и тот же файл,
или если мы внесли изменения в разных ветках, но забыли сначала сделать pull.

Разрешить конфликт можно командой "git merge", Git покажет, где именно произошло столкновение и какие строки кода
противоречат друг другу, нужно поправить вручную. Затем команду "git add" для добавления измененных файлов в индекс.
Потом "git commit -m "текст с описанием" для сохранения изменений. И, в конце, используйте команду "git push".

7. Можно ли удалить ветку? Как?
Будем как пример использовать название ветки "test":

    git checkout -d test / удалить ветку, НО ВНАЧАЛЕ нужно с нее выйти

    git branch -v / проверить ветку
    git checkout main / уйти с ветки test, прежде чем делать "git checkout -d test"
